#!/bin/bash

function geturl {
	TESTARG=$1 python3 - <<END
from playwright.async_api import async_playwright
import asyncio
from os import environ

#  with sync_playwright() as playwright:
#      browser = playwright.chromium.launch()
#      page = browser.new_page()
#      page.on("request", lambda request: print("Request: " + request.url))
#      page.on(
#          "response",
#          lambda response: print(
#              "Response: " +
#              response.request.url))
#      page.goto("https://www.iyf.tv/play?id=nmVPxY64z3F")
#      browser.close()


async def main(linkURL):
    async with async_playwright() as p:
        browser = await p.chromium.launch()
        page = await browser.new_page()
        page.on("request", lambda request: print("Request: " + request.url))
        #  await page.goto("http://playwright.dev")
        #  await page.goto("https://www.iyf.tv/play?id=nmVPxY64z3F")
        await page.goto(linkURL)
        print(await page.title())
        await browser.close()

asyncio.run(main(environ.get("TESTARG")))

END
}
linkpairs=$(geturl $1)
# linklist=$(echo $linkpairs | xargs -n2 bash -c 'echo $0')
m3u8link=$(echo $linkpairs | xargs -n1 | grep list.m3u8) # | xargs -n2 bash -c 'echo $1')
if [ "$#" -eq 1 ]; then
        randstring=$(date '+%Y-%m-%d-%H_%M_%S')
        filename=$randstring".mp4"
 else
        filename=$2
fi
echo "Downloading link"
echo $m3u8link
echo "====== Downloading with ffmpeg directly======"
ffmpeg -i $m3u8link -c copy -bsf:a aac_adtstoasc $filename


