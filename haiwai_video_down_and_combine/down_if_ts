#!/bin/bash

# get output from python extracting links from the input HTML codes geturl $1
# in a list of link" "filename
# linkpairs=$(geturl $1)
# linklist=$(echo $linkpairs | xargs -n2 bash -c 'echo $0')
# filelist=$(echo $linkpairs | xargs -n2 bash -c 'echo $1')
# linkpairs=$(echo $linkpairs \
#     | xargs -n2 printf "%s %s\n")
# using python print or echo neither can print new lines clearly
# printf in bash works better
 # echo $linkpairs

if [ "$#" -eq 0 ]; then
    echo "Download iftv video by .ts link. Somehow the m3u8 link can't be downloaded."
    echo "Use dev tool to find one .ts link and paste it as input."
    exit 1
fi

# # get date and time into a string as the output filename
randstring=$(date '+%Y-%m-%d-%H_%M_%S')
output=$randstring".ts"

# Decide output mp4 filename
if [ "$#" -eq 1 ]; then
	outputmp4=$output".mp4"
	echo "output to $outputmp4"
fi
if [ "$#" -eq 2 ]; then
	if [ ${2##*.} == "mp4" ]; then
		outputmp4=$2
	else
		outputmp4=$2".mp4"
	fi
	echo "output to $outputmp4"
fi

# make a tmp dir and put all the downloads there
 workingdir=$(pwd)
 tmpdir=$(mktemp -d ./tmp.XXXXXX)
 cd $tmpdir

# for i in {1..100}
# do
#     missinglist=''
#     while read -r line; do
#         filename=$(echo $line | xargs -n2 bash -c 'echo $1')
#         if [ ! -f $filename ]; then
#                 missinglist=$missinglist$line" "
#         fi
#     done <<< "$linkpairs"
#     if [ "$missinglist" == '' ]; then
#         break
#     fi
#     echo $missinglist \
#         | xargs -n2 -P5 bash -c 'axel -a -n 2 ${0} -o ${1}' \
#         | grep "Opening output file"
#         # some website cut one single ts file into several
#         # so we need add a new serial number to make a new name for each
# done

prefix=$(echo $1 |  sed 's/?.*//' | sed 's/[0-9]*.ts$//')
suffix=$(echo $1 | sed -E 's/.*\/[0-9]+\.ts(.*)/\1/' )

filelist=""

echo "Prefix :"$prefix
echo 'suffix :'$suffix

# exit 0

for i in {1..100000}
do
    link=$prefix$i".ts"$suffix
    filename=$i".ts"
    for j in {1..50}
    do
        axel -a $link -o $filename
         if test -f "$filename"; then
             break
         fi
     done
     if ! test -f "$filename"; then
         break
     fi
    filelist=$filelist' '$filename
done

filelist=$(echo $filelist | xargs -n1 )

cat <(while read -r line; do cat $line; done <<< "$filelist") \
    > $output \
           && ffmpeg -i $output -acodec copy -vcodec copy $outputmp4 \
	&& echo "${filelist[@]}" | xargs -n1 rm \
	 && cd $workingdir \
	 && mv $tmpdir"/"$outputmp4 $workingdir \
	 && rm -rf $tmpdir

# # END of script

# ########################
# ########################
# #
# #    ffmpeg has timestamp problem to combine ts files 
# #    better to use cat instead
# #
# # fileString=$(replace "${filelist[@]}")
# # ffmpeg -f concat -safe 0 -i <(for f in ./*.wav; do echo "file '$PWD/$f'"; done) -c copy output.wav
# #ffmpeg -f concat -safe 0 \
# #	   	-i <(while read -r line; do echo "file "$filepath$line; done <<< "$filelist") \
# #		-threads 0 -c copy  $output \
# #		&& echo "${filelist[@]}" | xargs -n1 | xargs -n1 rm 

# # rm "$tmpfile"

# # ffmpeg -f concat -i filelist -c copy $output \
# #	&& cat filelist | xargs -n2 bash -c 'rm ${1}'
